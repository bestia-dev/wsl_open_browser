var searchIndex = JSON.parse('{\
"unwrap":{"doc":"","i":[[8,"VerboseUnwrap","unwrap","Types which can be unwrapped and which may want to print a…",null,null],[16,"Wrapped","","The wrapped type.",0,null],[10,"verbose_unwrap","","Unwrap the value into its inner type or panics with an…",0,[[["option",4],["arguments",3]]]],[8,"VerboseUnwrapErr","","Types which can be unwrapped into an error type and which…",null,null],[16,"Wrapped","","The wrapped type.",1,null],[10,"verbose_unwrap_err","","Unwrap the value into its inner error type or panics with…",1,[[["option",4],["arguments",3]]]],[14,"unwrap","","A replacement for calling `unwrap()` on a `Result` or…",null,null],[14,"unwrap_err","","A replacement for calling `unwrap_err()` on a `Result`.",null,null]],"p":[[8,"VerboseUnwrap"],[8,"VerboseUnwrapErr"]]},\
"wsl_open_browser":{"doc":"wsl_open_browser","t":[5,5,5],"n":["new_process_for_browser","open_browser","open_browser_from_path"],"q":["wsl_open_browser","",""],"d":["open browser in new child process","Inside WSL2 opens a html file in the browser that is in …","open browser from absolute Linux path"],"i":[0,0,0],"f":[[[["str",15]]],[[["str",15]]],[[["path",3]]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};